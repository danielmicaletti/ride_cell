!function(){"use strict";function t(t){t.defaults.xsrfHeaderName="X-CSRFToken",t.defaults.xsrfCookieName="csrftoken"}angular.module("rideCell",["ngAnimate","ngSanitize","ui.router","ui.bootstrap","rideCell.config","rideCell.routes","main"]),angular.module("rideCell.config",["ui.router"]),angular.module("rideCell.routes",["ui.router.router"]),angular.module("rideCell").run(t),t.$inject=["$http"]}(),function(){"use strict";function t(t,e,o){t.hashPrefix(""),e.caseInsensitive(!0),e.strictMode(!1)}angular.module("rideCell.config").config(t),t.$inject=["$locationProvider","$urlMatcherFactoryProvider","$httpProvider"]}(),function(){"use strict";function t(t,e){e.otherwise(function(t){t.get("$state").go("app")}),t.state("app",{url:"/app",controller:"AppController",controllerAs:"vm",templateUrl:static_path("views/main/app.html")})}angular.module("rideCell.routes").config(t),t.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";angular.module("main",["main.controllers","main.services","main.directives"]),angular.module("main.controllers",[]),angular.module("main.services",[]),angular.module("main.directives",[])}(),function(){"use strict";function t(t,e,o,n,r){function i(){console.log("Unable to retrieve your location"),l({lat:37.769706,lng:-122.447939})}function a(){navigator.geolocation?navigator.geolocation.getCurrentPosition(function(t){p.userPosition={lat:t.coords.latitude,lng:t.coords.longitude},l(p.userPosition)},i):(console.log("Geolocation is not supported by your browser"),p.userPosition={lat:37.769706,lng:-122.447939},l(p.userPosition))}function l(t){p.map=new google.maps.Map(document.getElementById("map"),{center:t,zoom:13});var e=new google.maps.Marker({position:t,map:p.map,draggable:!0,flat:!0,label:{fontFamily:"Fontawesome",text:""}});e.addListener("dragend",function(){var t={lat:e.getPosition().lat(),lng:e.getPosition().lng()};p.map.setCenter(t),o=s(),p.getParkingLots(t,o.radius)}),p.map.addListener("bounds_changed",function(){o=s(),p.getParkingLots(o.position,o.radius)}),p.loading=!1;var o=s();p.getParkingLots(o.position,o.radius)}function s(){var t=10,e=p.map.getBounds(),o=p.map.getCenter(),n={lat:p.map.getCenter().lat(),lng:p.map.getCenter().lng()};if(e&&o){var r=e.getNorthEast();t=google.maps.geometry.spherical.computeDistanceBetween(o,r)/1609.344}return p.curRadius=t,{radius:t,position:n}}function u(t){p.parkingLots=t,g(p.parkingLots,p.map)}function c(t){console.log(t)}function g(t,e){angular.forEach(t,function(t){new google.maps.Marker({position:{lat:t.parking_lot_location[0],lng:t.parking_lot_location[1]},map:e,animation:google.maps.Animation.DROP,draggable:!1,flat:!0,label:{fontFamily:"Fontawesome",text:""},title:t.parking_lot_name}).addListener("click",function(){p.openModal(t)})})}function d(t){p.addAlert({type:"success",msg:"Your spot has been reserved!"}),p.getParkingLots(p.userPosition,p.curRadius)}function m(t){console.log(t)}var p=this;p.loading=!0,p.alerts=[];var f=media_path(""),v=static_path("");t.path={static_files:e.trustAsResourceUrl(v),media:e.trustAsResourceUrl(f)},p.getParkingLots=function(t,e){t.radius=e,r.getParkingLots(t).then(u).catch(c)},p.openModal=function(t){n.open({animation:!0,templateUrl:e.trustAsResourceUrl(static_path("views/modals/reserve.modal.html")),controller:"ReserveModalController",controllerAs:"vm",size:"md",resolve:{lot:function(){return t}}}).result.then(function(t){t&&r.reserveSpot(t).then(d).catch(m)},function(){console.log("Modal dismissed")})},p.addAlert=function(t){p.alerts.push({type:t.type,msg:t.msg}),o(function(){p.closeAlert(0)},3e3)},p.closeAlert=function(t){p.alerts.splice(t,1)},function(){a()}()}angular.module("main.controllers").controller("AppController",t),t.$inject=["$scope","$sce","$timeout","$uibModal","Main"]}(),function(){"use strict";function t(t,e){var o=this;o.lot=e,o.reserveTime=0,o.submitReservation=function(){t.close({parking_lot_id:o.lot.id,spot_res_end:o.reserveTime})},o.closeModal=function(){t.dismiss("cancel")}}angular.module("main.controllers").controller("ReserveModalController",t),t.$inject=["$uibModalInstance","lot"]}(),function(){"use strict";function t(t,e,o){function n(t){return t.data}function r(t){return o.reject(t)}function i(e){return t.get("api/v1/parking-lot-locations?lat="+e.lat+"&lng="+e.lng+"&radius="+e.radius).then(n).catch(r)}function a(e){return t.post("api/v1/spot-reservation/",e).then(n).catch(r)}function l(e){return t.delete("api/v1/spot-reservation/"+e+"/").then(n).catch(r)}return{getParkingLots:i,reserveSpot:a,cancelSpot:l}}angular.module("main.services").factory("Main",t),t.$inject=["$http","$sce","$q"]}();